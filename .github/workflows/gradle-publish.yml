# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: CI con gradle

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
        #### CONFIGURACIÃ“N DEL ENTORNO #####
       - uses: actions/checkout@v2 #descarga el repositorio en el ejecutor
       - name: Set up JDK 8
         uses: actions/setup-java@v2
         with:
            java-version: '8'
            distribution: 'adopt'
            server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
            settings-path: ${{ github.workspace }} # location for the settings.xml file
       - name: set up gradle
         uses: gradle/gradle-build-action@v2
         with:
            gradle-version: 2.1
            
       #### BUILDS Y DOCKERIZACION ######
       - name: hacer build del frontend 
         working-directory: src/Clients
         run: ./gradlew build
         
       - name: hacer build del backend
         working-directory: src/Backend/OrderService
         run: ./gradlew build test
         
       - name: dockerizar el front y el backend
         run: | 
            cp src/Clients/build/libs/*.war deploy/docker/Clients/drop #copiar el resultado del build para la nueva imagen
            docker build -t p2cicd/web deploy/docker/Clients
            cp src/Backend/OrderService/build/libs/ordering* deploy/docker/Order/drop #copiar el resultado del build para la nueva imagen
            docker build -t p2cicd/order deploy/docker/Order
            
      ### SUBIR IMAGENES A DOCKERHUB #####
      
       - name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # crear la variable de entorno en Settings --> Secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }} # crear la variable de entorno en Settings --> Secrets
       - name: Etiquetar con formato DockerHub
         run: |
          docker tag p2cicd/web ${{ secrets.DOCKERHUB_USERNAME }}/p2cicd:web
          docker tag p2cicd/order ${{ secrets.DOCKERHUB_USERNAME }}/p2cicd:order
       - name: Push a DockerHub
         run: |
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2cicd:order
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2cicd:web
           
